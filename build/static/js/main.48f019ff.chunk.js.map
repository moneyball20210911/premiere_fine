{"version":3,"sources":["data.js","success.js","Home.js","tutorial.js","admin.js","App.js","index.js"],"names":["User","props","react_default","a","createElement","className","user","address","email","Data","_this","Object","classCallCheck","this","_super","call","userList","state","users","map","index","data_User","key","_this2","axios","post","process","then","res","data","status","setState","catch","err","console","log","getData","id","src","width","style","marginTop","Component","Success","_useState","useState","_useState2","slicedToArray","values","setValues","_useState3","_useState4","success","setSuccess","_useState5","_useState6","failed","setFailed","_useState7","_useState8","exist","setExist","_useState9","_useState10","submit","setSubmit","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","refKey","React","useRef","refEmail","handleChange","event","persist","objectSpread2","defineProperty","target","name","value","handleSubmit","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","wrap","_context","prev","next","abrupt","current","focus","test","select","sent","t0","stop","_x","apply","arguments","marginRight","Grid","container","item","xs","sm","md","lg","color","href","ref","onChange","type","placeholder","required","onClick","marginLeft","fontFamily","fontSize","textAlign","Home","ok","setOk","options","currency","receipt","amount","description","handler","response","prefill","contact","notes","theme","hide_topbar","useEffect","script","document","async","body","appendChild","setTimeout","rzp1","window","Razorpay","on","open","openPayModal","blank","display","Tutorial","setOpen","open1","setOpen1","open2","setOpen2","height","controls","Admin","react_router_dom","react_router","exact","path","component","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.48f019ff.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './styles.css';\r\nconst User = props => (\r\n    <tr>\r\n        <td className = \"address-list\">{props.user.address}</td>\r\n        <td className = \"email-list\">{props.user.email}</td>\r\n    </tr>\r\n)\r\n\r\nexport default class Data extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users: []\r\n        };\r\n    }\r\n    getData () {\r\n        axios.post(process.env.REACT_APP_PROXY + `/api/get/user`).then( res => {\r\n            \r\n            if (res && res.data) {\r\n                const data = res.data;\r\n                if (data.status==='ok') {\r\n                    this.setState({\r\n                        users: data.data\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        users: []\r\n                    })\r\n                }\r\n            }\r\n        })\r\n        .catch( err => console.log(err));\r\n    }\r\n    componentDidMount() {\r\n        this.getData()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.getData()\r\n    }\r\n\r\n    userList = () => this.state.users.map(\r\n        (user, index) => <User user={user} key={index} />\r\n    )\r\n    render() {\r\n        return(\r\n            <div id = \"User-List\">\r\n                <div className = \"custom-logo\"><img src = \"../../img/custom-logo.png\" width = \"200vw\" /></div>\r\n                <div className = \"Data-title\">Customers List for PREMIERE</div>\r\n                <table className=\"table table-striped\" style={{ marginTop: 20}}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ADDRESS</th>\r\n                            <th>EMAIL</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { this.userList() }\r\n                    </tbody>\r\n                </table>\r\n                <div className = \"custom-footer\">© Copyright 2021  - All Rights Reserved || Moneyball Team Admin</div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {Grid} from '@material-ui/core';\r\nimport axios from 'axios';\r\n// import HorizontalPageProgress from \"react-horizontal-page-progress\";\r\n// import VideoThumbnail from 'react-video-thumbnail'; \r\nimport \"./styles.css\";\r\n\r\nexport default function Success(){\r\n    const [values, setValues] = useState({});\r\n    const [success, setSuccess] = useState(false);\r\n    const [failed, setFailed] = useState(false);\r\n    const [exist, setExist] = useState(false);\r\n    const [submit, setSubmit] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [open1, setOpen1] = useState(false);\r\n    const [open2, setOpen2] = useState(false);\r\n    const refKey = React.useRef(null)\r\n    const refEmail = React.useRef(null)\r\n\r\n    const handleChange = event => {\r\n        event.persist();\r\n        setValues(values => ({\r\n          ...values,\r\n          [event.target.name]: event.target.value\r\n        }));\r\n      };\r\n      console.log(values.address);\r\n      console.log(values.email);\r\n    const validateEmail = (email) => {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(email);\r\n    }\r\n      \r\n    const handleSubmit =async (e) =>{\r\n        try {\r\n            if (!values.address) {\r\n                return refKey.current.focus()\r\n            }\r\n            if (!/^0x[a-fA-F0-9]{40}$/.test(values.address)) {\r\n                refKey.current.select();\r\n                return refKey.current.focus()\r\n            }\r\n            if (!values.email) {\r\n                return refEmail.current.focus()\r\n            }\r\n            if (!validateEmail(values.email)) {\r\n                refEmail.current.select();\r\n                return refEmail.current.focus()\r\n            }\r\n            \r\n            \r\n            const url = process.env.REACT_APP_PROXY + `/api/add/user`\r\n            // const Customers = {\r\n            //     address: values.address,\r\n            //     email: values.email\r\n            // }\r\n            const res = await axios.post(url, {\r\n                // values:Customers\r\n                address: values.address,\r\n                email: values.email\r\n            })\r\n            const data = res && res.data;\r\n            console.log(values);\r\n            console.log(data);\r\n            if (data && data.status==='ok') {\r\n                setFailed(false);\r\n                setExist(false);\r\n                setSuccess(true);\r\n                setSubmit(true);\r\n            } \r\n            if (data && data.status==='exist') {\r\n                setSuccess(false);\r\n                setFailed(false);\r\n                setExist(true);\r\n            }\r\n            if (data && data.status==='fail') {\r\n                setSuccess(false);\r\n                setExist(false);\r\n                setFailed(true);\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n            setFailed(true);\r\n        }\r\n    }  \r\n    // const [address, setAddress] = useState('');\r\n    // useEffect(() => {    \r\n    //     const {ethereum} = window;\r\n    //     if(ethereum && window.sessionStorage.getItem(\"connect\")){\r\n    //         handleConnect();\r\n    //     };\r\n    //   }, []);\r\n      \r\n    // const handleConnect =async () =>{\r\n    //     if(!address){\r\n    //         const {ethereum} = window\r\n    //         if (ethereum) {\r\n    //             const chainId =await window.ethereum.request({ method: 'eth_chainId' });\r\n    //             if(Number(chainId) == 56){\r\n    //                 ethereum.request({ method: 'eth_requestAccounts' }).then(accs=>{\r\n    //                     if (accs && accs.length) {\r\n    //                         console.log(process.env.REACT_APP_PROXY + `/api/add/user`);\r\n    //                         axios.post(process.env.REACT_APP_PROXY + `/api/add/user`, { address:accs[0] }).then(res => {\r\n    //                             const data = res && res.data;\r\n    //                             if (data && data.status==='ok') {\r\n    //                                 setAddress(accs[0])\r\n    //                                 window.sessionStorage.setItem(\"connect\", \"1\")\r\n    //                             } else {\r\n    //                                 alert(\"failed\");\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 })\r\n    //             }else{\r\n    //                 alert(\"please select smart chain network !!!\");\r\n    //             }\r\n    //         } else {\r\n    //             alert('🦊 first, install metamask');\r\n    //         }\r\n    //     }\r\n    //   }\r\n    return(\r\n        <div className = \"success\">\r\n            <div>.</div>\r\n            <div className = \"alam\">\r\n                <span><img src = \"img/alam-warn.webp\" width = \"30vw\" style = {{marginRight:\"20px\"}} /></span>\r\n                <a className = \"alam-text\">DO NOT CLOSE OR REFRESH THIS PAGE UNTIL YOU'VE SUCCESSFULLY COMPLETED ALL THE STEPS !</a>\r\n            </div>\r\n            <Grid container>\r\n                <Grid item xs={12} sm = {12} md = {1} lg={2}></Grid>\r\n                <Grid item xs={12} sm = {12} md = {10} lg={8}>\r\n                    <div className = \"success-header\">\r\n                        <img src = \"img/film-logo.png\" /> \r\n                        <span className = \"logo-text\">Premiere</span>\r\n                    </div>\r\n                    <div className = \"success-landing\">\r\n                        <div className = \"congrats\">\r\n                            😁<br />\r\n                            CONGRATULATIONS!<br />\r\n                            YOUR REGISTRATION IS COMPLETE <br />\r\n                            <hr style = {{width:\"40%\", color:\"rgba(255, 255, 255, 0.34)\"}} />\r\n                        </div>\r\n                        <div>\r\n                            <div className = \"step-text\">PLEASE INPUT YOUR INFORMATION TO RECEIVE MBT COINS</div>\r\n                            <div className = \"flow-bar\"></div>\r\n                            <div className = \"alam\">\r\n                                <span><img src = \"img/tutorial.webp\" width = \"30vw\" style = {{marginRight:\"20px\"}} /></span>\r\n                                <a href = \"/tutorial_how-to-install-metamask-and-add-Binance-smart-chain-and-MBT-coin\" target = \"_blank\" className = \"alam-text\">PLEASE REFERENCE 3 TUTORIAL GUIDES TO SETUP METAMASK WALLET TO RECEIVE COINS IF YOU NEED HELP</a>\r\n                            </div>\r\n                            <br /><br />\r\n                            <div className = {submit?\"hidden\":\"\"}>\r\n                                        <div>\r\n                                            <input ref={refKey} className = \"address\" onChange = {handleChange} value = {values.address || \"\"} type = \"text\" name = \"address\" placeholder = \"Enter Your Public Key\" required></input>\r\n                                        </div><br />\r\n                                        <div>\r\n                                            <input ref={refEmail} className = \"email\" onChange = {handleChange} value = {values.email || \"\"} type = \"email\" name=\"email\" placeholder = \"Enter Your Email Address\" required></input>\r\n                                        </div><br />\r\n                                        \r\n                                        <div className = {failed?\"result-text2\":\"hidden\"}>Failed Submitting. Please try again</div>\r\n                                        <div className = {exist?\"result-text3\":\"hidden\"}>Already exist. Try with another</div><br/>\r\n                                        <div>\r\n                                            <button onClick={handleSubmit} className = \"button-1\" type=\"submit\">Click to Submit</button>\r\n                                        </div>\r\n                            </div><br />\r\n                            {/* <div className = \"connect-button\">\r\n                                {address?(\r\n                                    <button className = \"connect1\" >🦊 {address.toString()}</button>\r\n                                ):(\r\n                                    <button className = \"connect\" onClick = {handleConnect}>🦊 Connect Metamask Wallet</button>\r\n                                    )\r\n                                }\r\n                            </div> */}\r\n                            <div className = {success?\"result-text1\":\"hidden\"}>You have successfully submitted !</div><br/>\r\n                            <div className = \"steps\">\r\n                                <div className = \"step-title\">\r\n                                    <img src = \"img/bottom_arrow.png\" width = \"10%\" />\r\n                                </div><br/><br/>\r\n                                <div className = \"step-fill\">\r\n                                    <Grid container>\r\n                                        <Grid item xs={12} sm = {2} md = {2} lg={2}>\r\n                                            <img src = \"img/step-4.webp\" width = \"70%\" style = {{marginLeft:'15%'}} />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm = {1} md = {1} lg={1}></Grid>\r\n                                        <Grid item xs={12} sm = {9} md = {9} lg={9}>\r\n                                            <div className = \"step-sub-title\">\r\n                                                <a href = \"https://t.me/joinchat/zF2KxNkFrNk4YmE1\" target = \"_blank\">Join the Telegram channel to receive updates</a>\r\n                                            </div><br />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </div>\r\n                            </div>\r\n                            <hr style = {{width:\"60%\", color:\"rgba(255, 255, 255, 0.34)\"}} /><br/>\r\n                            <div style = {{color:\"white\", fontFamily:\"Arial\", fontSize:\"16px\", textAlign:\"center\"}}>We do not share or take sensitive/ personal data. Your Public address is safe to share and we will only use it in your favor.</div>\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12} sm = {12} md = {1} lg={2}></Grid>\r\n            </Grid>\r\n            <div className = \"success-footer\">\r\n                <div style = {{marginLeft:\"20%\"}}>© Copyright 2021  - All Rights Reserved</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, {useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport Success from './success';\nconst Home = () => {\n  const [ok, setOk] = useState(false);\n  const options = {\n    key: \"rzp_live_JOlrGIAoSDme3h\",\n    currency: \"INR\",\n    receipt: \"#1\",\n    amount: \"10000\", //  = INR 100\n    name: \"MoneyBall Token\",\n    description: \"Pay for the Webinar\",\n    // handle after payment success\n    handler: function (response) {\n      setOk(true);\n\n    },\n    prefill: {\n      name: \"\",\n      contact: \"\",\n      email: \"\",\n      address: \"\"\n    },\n    notes: {\n      address: \"\"\n    },\n    theme: {\n      color: \"#26e3ff\",\n      hide_topbar: false\n    }\n  };\n\n  const openPayModal = (options) => {\n    var rzp1 = new window.Razorpay(options);\n    rzp1.on(\"payment.failed\", (res) => {\n      // handle fail Payment\n      console.log(\"Payment Failed: \", res);\n      setOk(false);\n    });\n    rzp1.open();\n  };\n  useEffect(() => {\n      const script = document.createElement(\"script\");\n      script.src = \"https://checkout.razorpay.com/v1/checkout.js\";\n      script.async = true;\n      document.body.appendChild(script);\n      setTimeout(()=>{\n          openPayModal(options)},1000)\n  }, []);\n\n  return (\n    <div>\n      {ok?\n      (\n        <Success />\n      )\n    :(\n      <div className = \"buttons\">\n        <div className = \"success-header\">\n                        <img src = \"img/film-logo.png\" /> \n                        <span className = \"logo-text\">Premiere</span>\n        </div>\n        <div className = \"text-note\">\n          <div className = \"notice-text\">Kindly wait while the payment page loads</div><br />\n          <div className = \"notice-text\">Once your payment is complete do not Refresh or exit the payment success page until you've completed all necessary steps.</div><br />\n          <div className = \"notice-text\">Incase you require any assistance, contact support via mail <span style = {{color:\"lightblue\"}}>support@cryptodomination101.com</span></div>\n        </div>\n        <a className = \"back-button\" href = \"https://www.premiere-mbt.com/\" blank=\"_self\">\n          <img src = \"img/return-button.png\" width = \"100vw\" />  \n          <b style={{color:\"white\",marginTop:\"20px\", display: \"block\", textAlign:\"center\"}}>BACK</b>\n        </a><br />\n        \n        \n      </div>  \n    )\n    }\n    </div>\n  );\n};\nexport default Home;\n","import React, {useEffect, useState} from 'react';\r\nimport {Grid} from '@material-ui/core';\r\nimport axios from 'axios';\r\n// import HorizontalPageProgress from \"react-horizontal-page-progress\";\r\n// import VideoThumbnail from 'react-video-thumbnail'; \r\nimport \"./styles.css\";\r\n\r\nexport default function Tutorial(){\r\n    const [values, setValues] = useState({});\r\n    const [success, setSuccess] = useState(false);\r\n    const [failed, setFailed] = useState(false);\r\n    const [exist, setExist] = useState(false);\r\n    const [submit, setSubmit] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [open1, setOpen1] = useState(false);\r\n    const [open2, setOpen2] = useState(false);\r\n    const refKey = React.useRef(null)\r\n    const refEmail = React.useRef(null)\r\n\r\n    const handleChange = event => {\r\n        event.persist();\r\n        setValues(values => ({\r\n          ...values,\r\n          [event.target.name]: event.target.value\r\n        }));\r\n      };\r\n      console.log(values.address);\r\n      console.log(values.email);\r\n    const validateEmail = (email) => {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(email);\r\n    }\r\n      \r\n    const handleSubmit =async (e) =>{\r\n        try {\r\n            if (!values.address) {\r\n                return refKey.current.focus()\r\n            }\r\n            if (!/^0x[a-fA-F0-9]{40}$/.test(values.address)) {\r\n                refKey.current.select();\r\n                return refKey.current.focus()\r\n            }\r\n            if (!values.email) {\r\n                return refEmail.current.focus()\r\n            }\r\n            if (!validateEmail(values.email)) {\r\n                refEmail.current.select();\r\n                return refEmail.current.focus()\r\n            }\r\n            \r\n            \r\n            const url = process.env.REACT_APP_PROXY + `/api/add/user`\r\n            // const Customers = {\r\n            //     address: values.address,\r\n            //     email: values.email\r\n            // }\r\n            const res = await axios.post(url, {\r\n                // values:Customers\r\n                address: values.address,\r\n                email: values.email\r\n            })\r\n            const data = res && res.data;\r\n            console.log(values);\r\n            console.log(data);\r\n            if (data && data.status==='ok') {\r\n                setFailed(false);\r\n                setExist(false);\r\n                setSuccess(true);\r\n                setSubmit(true);\r\n            } \r\n            if (data && data.status==='exist') {\r\n                setSuccess(false);\r\n                setFailed(false);\r\n                setExist(true);\r\n            }\r\n            if (data && data.status==='fail') {\r\n                setSuccess(false);\r\n                setExist(false);\r\n                setFailed(true);\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n            setFailed(true);\r\n        }\r\n    }  \r\n    // const [address, setAddress] = useState('');\r\n    // useEffect(() => {    \r\n    //     const {ethereum} = window;\r\n    //     if(ethereum && window.sessionStorage.getItem(\"connect\")){\r\n    //         handleConnect();\r\n    //     };\r\n    //   }, []);\r\n      \r\n    // const handleConnect =async () =>{\r\n    //     if(!address){\r\n    //         const {ethereum} = window\r\n    //         if (ethereum) {\r\n    //             const chainId =await window.ethereum.request({ method: 'eth_chainId' });\r\n    //             if(Number(chainId) == 56){\r\n    //                 ethereum.request({ method: 'eth_requestAccounts' }).then(accs=>{\r\n    //                     if (accs && accs.length) {\r\n    //                         console.log(process.env.REACT_APP_PROXY + `/api/add/user`);\r\n    //                         axios.post(process.env.REACT_APP_PROXY + `/api/add/user`, { address:accs[0] }).then(res => {\r\n    //                             const data = res && res.data;\r\n    //                             if (data && data.status==='ok') {\r\n    //                                 setAddress(accs[0])\r\n    //                                 window.sessionStorage.setItem(\"connect\", \"1\")\r\n    //                             } else {\r\n    //                                 alert(\"failed\");\r\n    //                             }\r\n    //                         })\r\n    //                     }\r\n    //                 })\r\n    //             }else{\r\n    //                 alert(\"please select smart chain network !!!\");\r\n    //             }\r\n    //         } else {\r\n    //             alert('🦊 first, install metamask');\r\n    //         }\r\n    //     }\r\n    //   }\r\n    return(\r\n        <div className = \"success\">\r\n            <Grid container>\r\n                <Grid item xs={12} sm = {12} md = {1} lg={2}></Grid>\r\n                <Grid item xs={12} sm = {12} md = {10} lg={8}>\r\n                    <div className = \"success-header\">\r\n                        <img src = \"img/film-logo.png\" /> \r\n                        <span className = \"logo-text\">Premiere</span>\r\n                    </div>\r\n                    <div className = \"success-landing\">\r\n                        <div className = \"congrats\">\r\n                            <div>TUTORIALS</div>\r\n                            <hr style = {{width:\"40%\", color:\"rgba(255, 255, 255, 0.34)\"}} />\r\n                        </div>\r\n                        <div>\r\n                            <div className = \"step-text\">HERE ARE YOUR STEPS</div>\r\n                            <div className = \"flow-bar\"></div>\r\n                            <div className = \"steps\">\r\n                                <div className = \"step-title\" id=\"step-start\">STEP 1</div><br/>\r\n                                <div className = \"step-fill\">\r\n                                    <Grid container>\r\n                                        <Grid item xs={12} sm = {2} md = {2} lg={2}>\r\n                                            <img src = \"img/step-1.webp\" width = \"70%\" style = {{marginLeft:'15%'}} />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm = {1} md = {1} lg={1}></Grid>\r\n                                        <Grid item xs={12} sm = {9} md = {9} lg={9}>\r\n                                            <div className = \"step-sub-title\">\r\n                                                <a href = \"https://metamask.io/download\" target = \"_blank\">Download The Meta Mask Wallet</a>\r\n                                            </div><br />\r\n                                            <div className = \"step-sub-comment\">\r\n                                                <a href = \"https://metamask.io/download\" target = \"_blank\">DOWNLOAD META MASK</a>\r\n                                            </div>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <div className = \"video\">\r\n                                        <video width=\"80%\" height=\"600px\" controls>\r\n                                            <source src=\"video/step-1.mp4\" type=\"video/mp4\" />\r\n                                        </video>\r\n                                        <div className = \"thumbnail\" style = {open?{display: \"none\"}:null}>\r\n                                            <img src = \"img/thumbnail.png\" width = \"100vw\" onClick = {()=>setOpen(true)}/>                                      \r\n                                        </div>\r\n                                    </div><br/>\r\n                                    <div style={{textAlign:\"center\"}}>\r\n                                        <span><img src = \"img/exclam.png\" width = \"20vw\" /> </span>\r\n                                        <span className = \"warn-text\">Watch this tutorial and follow all the steps as directed!</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className = \"steps\">\r\n                                <div className = \"step-title\">STEP 2</div><br/><br/>\r\n                                <div className = \"step-fill\">\r\n                                    <Grid container>\r\n                                        <Grid item xs={12} sm = {2} md = {2} lg={2}>\r\n                                            <img src = \"img/step-2.webp\" width = \"70%\" style = {{marginLeft:'15%'}} />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm = {1} md = {1} lg={1}></Grid>\r\n                                        <Grid item xs={12} sm = {9} md = {9} lg={9}>\r\n                                            <div className = \"step-sub-title\">Add the BSC Network</div><br />\r\n                                            <div className = \"step-sub-comment\">\r\n                                                <a href = \"https://academy.binance.com/en/articles/connecting-metamask-to-binance-smart-chain.amp\" target = \"_blank\">Read more about the BSC Network</a>\r\n                                                <br/><br/>\r\n                                                Network Name:<b> Smart Chain</b><br/>\r\n                                                <a href = \"https://bsc-dataseed.binance.org/\" target = \"_blank\">New RPC URL:<b> https://bsc-dataseed.binance.org/</b></a><br/>\r\n                                                ChainID:<b> 56</b><br/>\r\n                                                Symbol:<b> BNB</b><br/>\r\n                                                <a href = \"https://bscscan.com\" target = \"_blank\">Block Explorer URL:<b> https://bscscan.com</b></a><br/><br/><br/>\r\n                                            </div>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <div className = \"video\">\r\n                                        <video width=\"80%\" height=\"600px\" controls>\r\n                                            <source src=\"video/step-2.mp4\" type=\"video/mp4\" />\r\n                                        </video>\r\n                                        <div className = \"thumbnail\" style = {open1?{display: \"none\"}:null}>\r\n                                            <img src = \"img/thumbnail.png\" width = \"100vw\" onClick = {()=>setOpen1(true)}/>                                      \r\n                                        </div>\r\n                                    </div><br/>\r\n                                    <div style={{textAlign:\"center\"}}>\r\n                                        <span><img src = \"img/exclam.png\" width = \"20vw\" /> </span>\r\n                                        <span className = \"warn-text\">Watch this tutorial and follow all the steps as directed!</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className = \"steps\">\r\n                                <div className = \"step-title\">STEP 3</div><br/>\r\n                                <div className = \"step-fill\">\r\n                                    <Grid container>\r\n                                        <Grid item xs={12} sm = {2} md = {2} lg={2}>\r\n                                            <img src = \"img/step-3.webp\" width = \"70%\" style = {{marginLeft:'15%'}} />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm = {1} md = {1} lg={1}></Grid>\r\n                                        <Grid item xs={12} sm = {9} md = {9} lg={9}>\r\n                                            <div className = \"step-sub-title\">Add MoneyBall Token</div><br />\r\n                                            <div className = \"step-sub-comment\">\r\n                                                Token Address:<b> 0x8d7d20bc3be644eaab3239e3a5aa9158b84912ed</b><br/>\r\n                                                Token Symbol:<b> MBT</b><br/>\r\n                                                Token of precision:<b> 18</b><br/>\r\n                                            </div>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <div className = \"video\">\r\n                                        <video width=\"80%\" height=\"600px\" controls>\r\n                                            <source src=\"video/step-3.mp4\" type=\"video/mp4\" />\r\n                                        </video>\r\n                                        <div className = \"thumbnail\" style = {open2?{display: \"none\"}:null}>\r\n                                            <img src = \"img/thumbnail.png\" width = \"100vw\" onClick = {()=>setOpen2(true)}/>                                      \r\n                                        </div>\r\n                                    </div><br/>\r\n                                    <div style={{textAlign:\"center\"}}>\r\n                                        <span><img src = \"img/exclam.png\" width = \"20vw\" /> </span>\r\n                                        <span className = \"warn-text\">Watch this tutorial and follow all the steps as directed!</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div><br /><br />\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12} sm = {12} md = {1} lg={2}></Grid>\r\n            </Grid>\r\n            <div className = \"success-footer\">\r\n                <div style = {{marginLeft:\"20%\"}}>© Copyright 2021  - All Rights Reserved</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\r\nimport Data from './data';\r\nimport Home from './Home';\r\nimport Tutorial from './tutorial';\r\nexport default function Admin(){\r\n    return(\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path = \"/\" component = {Home}></Route>\r\n                <Route exact path = \"/moneyball@2607/mbtpremiere\" component = {Data}></Route>\r\n                <Route exact path = \"/tutorial_how-to-install-metamask-and-add-Binance-smart-chain-and-MBT-coin\" component = {Tutorial}></Route>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}","import React from 'react';\r\nimport Admin from './admin';\r\n\r\nexport default function App(){\r\n    return(\r\n        <Admin />\r\n    )\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nReactDOM.render(\n    <App />, document.getElementById('root')\n);\n"],"sourceRoot":""}